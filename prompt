# ~/.bash_prompt

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# colors for constructing prompts
txtblk='\e[0;30m' # Black - Regular
txtred='\e[0;31m' # Red
txtgrn='\e[0;32m' # Green
txtylw='\e[0;33m' # Yellow
txtblu='\e[0;34m' # Blue
txtpur='\e[0;35m' # Purple
txtcyn='\e[0;36m' # Cyan
txtwht='\e[0;37m' # White
bldblk='\e[1;30m' # Black - Bold
bldred='\e[1;31m' # Red
bldgrn='\e[1;32m' # Green
bldylw='\e[1;33m' # Yellow
bldblu='\e[1;34m' # Blue
bldpur='\e[1;35m' # Purple
bldcyn='\e[1;36m' # Cyan
bldwht='\e[1;37m' # White
unkblk='\e[4;30m' # Black - Underline
undred='\e[4;31m' # Red
undgrn='\e[4;32m' # Green
undylw='\e[4;33m' # Yellow
undblu='\e[4;34m' # Blue
undpur='\e[4;35m' # Purple
undcyn='\e[4;36m' # Cyan
undwht='\e[4;37m' # White
bakblk='\e[40m'   # Black - Background
bakred='\e[41m'   # Red
bakgrn='\e[42m'   # Green
bakylw='\e[43m'   # Yellow
bakblu='\e[44m'   # Blue
bakpur='\e[45m'   # Purple
bakcyn='\e[46m'   # Cyan
bakwht='\e[47m'   # White
txtrst='\e[0m'    # Text Reset

# fancy git prompt that i dont like
function git_prompt() {
  local scm=""
  local changes=$txtblk$bakwht
  local branch=""
  # check for git
  if git status &> /dev/null; then
    branch="$(git branch --no-color | head -1 | cut -d' ' -f 2)"
    if git status -s | grep -q '^[[:space:]][MA] '; then
      changes=$txtblk$bakred
    fi
    scm="${changes}\] ${branch} ${txtrst}\]"
  fi

  # export PS1
  PS1=''"${HOST_COLOUR}"'\]\u@\h'"${txtrst}"'\]'"${scm}"' '"${txtwht}"'\]\w'"${txtrst}"'\]\n\$ '

  # set the title
  case "$TERM" in
  xterm*|rxvt*)
    echo -ne "\033]0;${USER}@$(hostname -s): ${PWD/$HOME/~}\007" ;;
  esac
}

# simple prompt
function simple_prompt() {
    local scm=""
    local changes=$txtgrn
    local branch=""
    if git status &> /dev/null; then
        branch="$(git branch --no-color | grep '^* .*' | cut -d' ' -f 2)"
        if git status | egrep  -q '^(# Changes not staged for commit||# Changes to be committed):'; then
            changes=$txtred
        elif git status 2>&1 | grep  -q '^# Your branch is ahead of '; then
            changes=$txtylw
        fi
        scm=" on ${changes}\]${branch} ${txtrst}\]"
    fi

    # export PS1
    PROMPT="${txtpur}\]\u"
    PROMPT="${PROMPT}${txtwht} at "
    PROMPT="${PROMPT}${txtpur}\]\h"
    PROMPT="${PROMPT}${txtwht} in "
    PROMPT="${PROMPT}${txtpur}\]\w"
    PROMPT="${PROMPT}${txtwht}${scm}"
    PROMPT="${PROMPT}${txtrst}\]\n"
    PROMPT="${PROMPT}\$ "
    PS1=$PROMPT

    # set the title
    case "$TERM" in
    xterm*|rxvt*)
        echo -ne "\033]0;${USER}@$(hostname -s): ${PWD/$HOME/~}\007" ;;
    esac
}

# simple remote prompt
function remote_prompt() {
    # export PS1
    PROMPT="${txtwht}${bakred}"
    PROMPT="${PROMPT}\]@\h \w"
    PROMPT="${PROMPT}${txtrst}\]\n"
    PROMPT="${PROMPT}\$ "
    PS1=$PROMPT

    # set the title
    case "$TERM" in
    xterm*|rxvt*)
        echo -ne "\033]0;${USER}@$(hostname -s): ${PWD/$HOME/~}\007" ;;
    esac
}

if [[ "$REMOTE" -eq "1" ]] ; then
    PROMPT_COMMAND=remote_prompt
else
    PROMPT_COMMAND=simple_prompt
fi
